on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:        
      - 'v*' # Push events to v* tags

name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Setup Nuget.exe
        uses: warrenbuckley/Setup-Nuget@v1

      - name: Nuget Restore 
        run: nuget restore .\WorkflowTest\WorkflowTest.sln

      - name: Set version
        run: powershell "((Get-Content -path .\WorkflowTest\WorkflowTestProgram\VersionInfo.cs -Raw) -replace 'DEVELOPMENT','${{ github.ref }}') | Set-Content -Path .\WorkflowTest\WorkflowTestProgram\VersionInfo.cs"

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.0

      - name: Build Solution 
        run: msbuild.exe .\WorkflowTest\WorkflowTest.sln -p:Configuration=Release

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: .\WorkflowTest\WorkflowTestProgram\bin\Release\WorkflowTestProgram.cpz
          asset_name: WorkflowTestProgram.cpz
          asset_content_type: application/zip
